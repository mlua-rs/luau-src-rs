name: CI
on: [push, pull_request]

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        target:
        - x86_64-unknown-linux-gnu
        - i686-unknown-linux-gnu
        - aarch64-unknown-linux-gnu
        - x86_64-apple-darwin
        - x86_64-pc-windows-msvc
        - wasm32-unknown-emscripten
        include:
        - target: x86_64-unknown-linux-gnu
          os: ubuntu-latest
        - target: i686-unknown-linux-gnu
          os: ubuntu-latest
        - target: aarch64-unknown-linux-gnu
          os: ubuntu-latest
        - target: x86_64-apple-darwin
          os: macos-latest
        - target: x86_64-pc-windows-msvc
          os: windows-latest
        - target: wasm32-unknown-emscripten
          os: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.target }}
    - name: Install GCC (i686-unknown-linux-gnu)
      if: ${{ matrix.target == 'i686-unknown-linux-gnu' }}
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends gcc-multilib g++-multilib
      shell: bash
    - name: Install GCC (aarch64-unknown-linux-gnu)
      if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends gcc-aarch64-linux-gnu g++-aarch64-linux-gnu libc6-dev-arm64-cross
      shell: bash
    - name: Install emscripten (wasm32-unknown-emscripten)
      if: ${{ matrix.target == 'wasm32-unknown-emscripten' }}
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends emscripten
      shell: bash
    - name: Build
      run: |
        cargo build --manifest-path testcrate/Cargo.toml --target ${{ matrix.target }}
      shell: bash

  test:
    name: Test
    runs-on: ${{ matrix.os }}
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
        - os: ubuntu-latest
          target: x86_64-unknown-linux-gnu
        - os: macos-latest
          target: x86_64-apple-darwin
        - os: windows-latest
          target: x86_64-pc-windows-msvc
    steps:
    - uses: actions/checkout@main
    - uses: dtolnay/rust-toolchain@stable
      with:
        target: ${{ matrix.target }}
    - name: Run tests
      run: |
        cargo test --manifest-path testcrate/Cargo.toml
      shell: bash

  test_emscripten:
    name: Test emscripten
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@main
    - uses: dtolnay/rust-toolchain@stable
      with:
        target: wasm32-unknown-emscripten
    - name: Install emscripten
      run: |
        sudo apt-get update -y
        sudo apt-get install -y --no-install-recommends emscripten
      shell: bash
    - name: Run emscripten tests
      run: |
        export CARGO_TARGET_WASM32_UNKNOWN_EMSCRIPTEN_RUNNER=node
        cargo test --manifest-path testcrate/Cargo.toml
      shell: bash

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@main
    - uses: dtolnay/rust-toolchain@stable
      with:
        components: rustfmt
    - run: cargo fmt -- --check
